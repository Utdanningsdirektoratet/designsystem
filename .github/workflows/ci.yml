name: CI

on:
  push:
    branches:
      - main
      - dev
      - release/*
  pull_request:

permissions:
  actions: read
  contents: read
  checks: write

env:
  NXCACHE_AZURE_ACCOUNT_KEY: ${{ secrets.NXCACHE_AZURE_ACCOUNT_KEY }}

jobs:
  main:
    runs-on: ubuntu-latest
    outputs:
      run_ui_tests: ${{ steps.job_condition.outputs.run_ui_tests }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Note: pnpm version is set in package.json "packageManager"
      - name: Install pnpm
        uses: pnpm/action-setup@v4

      # Cache node_modules
      # Note: node version is set in package.json "engines.node"
      - uses: actions/setup-node@v4
        with:
          node-version-file: 'package.json'
          cache: 'pnpm'

      - run: pnpm install

      - uses: nrwl/nx-set-shas@v4

      - name: Print affected projects
        run: |
          pnpm nx show projects --affected --base $NX_BASE --head $NX_HEAD \
            | grep -v "^info" || echo "No projects affected" && true

      - name: Determine whether storybook-tests & chromatic need to run
        id: job_condition
        run: |
          IS_REACT_AFFECTED=$(./@internal/build-tools/bin/is-project-affected.sh @udir-design/react)
          echo "Is @udir-design/react affected? $IS_REACT_AFFECTED"
          echo "Is this a push to a protected branch? $IS_PUSH"
          ($IS_REACT_AFFECTED || $IS_PUSH) && RUN_UI_TESTS=true || RUN_UI_TESTS=false
          echo "Conclusion: should we run UI tests? $RUN_UI_TESTS"
          echo "run_ui_tests=$RUN_UI_TESTS" >> "$GITHUB_OUTPUT"
        env:
          IS_PUSH: ${{ github.event_name == 'push' }}

      - name: Skip 'Storybook Publish' check
        if: steps.job_condition.outputs.run_ui_tests == 'false'
        uses: LouisBrunner/checks-action@v2.0.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          name: Storybook Publish
          conclusion: skipped
      - name: Skip 'UI Tests' check
        if: steps.job_condition.outputs.run_ui_tests == 'false'
        uses: LouisBrunner/checks-action@v2.0.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          name: UI Tests
          conclusion: skipped
      - name: Skip 'UI Review' check
        if: steps.job_condition.outputs.run_ui_tests == 'false'
        uses: LouisBrunner/checks-action@v2.0.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          name: UI Review
          conclusion: skipped

      - name: Validate current commit (last commit) with commitlint
        if: github.event_name == 'push'
        run: pnpm commitlint --last --verbose

      - name: Validate PR commits with commitlint
        if: github.event_name == 'pull_request'
        run: pnpm commitlint --from ${{ github.event.pull_request.base.sha}} --to ${{ github.event.pull_request.head.sha }} --verbose

      - run: pnpm build

  storybook-tests:
    runs-on: ubuntu-latest
    needs: main
    if: needs.main.outputs.run_ui_tests == 'true'
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Note: pnpm version is set in package.json "packageManager"
      - name: Install pnpm
        uses: pnpm/action-setup@v4

      # Cache node_modules
      # Note: node version is set in package.json "engines.node"
      - uses: actions/setup-node@v4
        with:
          node-version-file: 'package.json'
          cache: 'pnpm'

      - run: pnpm install

      # Storybook tests requires first installing browsers for Playwright
      - name: Install Playwright browsers
        run: pnpm exec playwright install --with-deps chromium
      - name: Run Storybook tests
        run: pnpm nx test:storybook

  chromatic:
    runs-on: ubuntu-latest
    needs: [main]
    if: needs.main.outputs.run_ui_tests == 'true'
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Note: pnpm version is set in package.json "packageManager"
      - name: Install pnpm
        uses: pnpm/action-setup@v4

      # Cache node_modules
      # Note: node version is set in package.json "engines.node"
      - uses: actions/setup-node@v4
        with:
          node-version-file: 'package.json'
          cache: 'pnpm'

      - run: pnpm install

      - name: Build storybook
        run: pnpm nx build:storybook

      - name: Publish Storybook to Chromatic
        uses: chromaui/action@latest
        with:
          projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
          workingDir: '@udir-design/react'
          storybookBuildDir: ./storybook-static
          exitZeroOnChanges: true
          exitOnceUploaded: true
          onlyChanged: true
          externals: 'design-tokens/src/**'
