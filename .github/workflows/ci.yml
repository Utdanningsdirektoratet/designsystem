name: CI

on:
  push:
    branches:
      - main
      - dev
      - release/*
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      - ready_for_review

permissions:
  actions: read
  contents: read
  checks: write

env:
  AZURE_STORAGE_CONNECTION_STRING: ${{ secrets.AZURE_STORAGE_CONNECTION_STRING }}
  NX_KEY: ${{ secrets.NX_KEY }}

jobs:
  main:
    runs-on: ubuntu-latest
    outputs:
      run_ui_tests: ${{ steps.job_condition.outputs.run_ui_tests }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - uses: ./.github/actions/pnpm-setup

      - name: Print affected projects
        run: |
          pnpm nx show projects --affected --base $NX_BASE --head $NX_HEAD \
            | grep -v "^info" || echo "No projects affected" && true

      - name: Determine whether storybook-tests & chromatic need to run
        id: job_condition
        run: |
          IS_REACT_AFFECTED=$(./@internal/build-tools/bin/is-project-affected.sh @udir-design/react)
          echo "Is this a PR which is ready for review? $IS_PR_READY"
          echo "Is @udir-design/react affected? $IS_REACT_AFFECTED"
          echo "Is this a push to a protected branch? $IS_PUSH"
          (($IS_PR_READY && $IS_REACT_AFFECTED) || $IS_PUSH) && RUN_UI_TESTS=true || RUN_UI_TESTS=false
          echo "Conclusion: should we run UI tests? $RUN_UI_TESTS"
          echo "run_ui_tests=$RUN_UI_TESTS" >> "$GITHUB_OUTPUT"
        env:
          IS_PR_READY: ${{ github.event_name == 'pull_request' && !github.event.pull_request.draft }}
          IS_PUSH: ${{ github.event_name == 'push' }}

      - name: Skip 'Storybook Publish' check
        if: steps.job_condition.outputs.run_ui_tests == 'false'
        uses: LouisBrunner/checks-action@6b626ffbad7cc56fd58627f774b9067e6118af23 # v2.0.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          name: Storybook Publish
          conclusion: skipped
      - name: Skip 'UI Tests' check
        if: steps.job_condition.outputs.run_ui_tests == 'false'
        uses: LouisBrunner/checks-action@6b626ffbad7cc56fd58627f774b9067e6118af23 # v2.0.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          name: UI Tests
          conclusion: skipped
      - name: Skip 'UI Review' check
        if: steps.job_condition.outputs.run_ui_tests == 'false'
        uses: LouisBrunner/checks-action@6b626ffbad7cc56fd58627f774b9067e6118af23 # v2.0.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          name: UI Review
          conclusion: skipped

      - name: Validate current commit (last commit) with commitlint
        if: github.event_name == 'push'
        run: pnpm commitlint --last --verbose

      - name: Validate PR commits with commitlint
        if: github.event_name == 'pull_request'
        run: pnpm commitlint --from ${{ github.event.pull_request.base.sha}} --to ${{ github.event.pull_request.head.sha }} --verbose

      - run: pnpm build

      - name: Fail if the build changed any checked-in files
        run: git diff --stat --exit-code

  storybook-tests:
    runs-on: ubuntu-latest
    needs: main
    if: needs.main.outputs.run_ui_tests == 'true'
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
      - uses: ./.github/actions/pnpm-setup
      # Storybook tests requires first installing browsers for Playwright
      - name: Install Playwright browsers
        run: pnpm exec playwright install --with-deps chromium
      - name: Run Storybook tests
        run: pnpm nx test:storybook

  chromatic:
    runs-on: ubuntu-latest
    needs: [main]
    if: needs.main.outputs.run_ui_tests == 'true'
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - uses: ./.github/actions/pnpm-setup

      - name: Build storybook
        run: pnpm nx build:storybook

      - name: Publish Storybook to Chromatic
        uses: chromaui/action@d7afd50124cf4f337bcd943e7f45cfa85a5e4476 # v12.0.0
        with:
          projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
          workingDir: '@udir-design/react'
          storybookBuildDir: ./storybook-static
          exitZeroOnChanges: true
          exitOnceUploaded: true
          onlyChanged: true
          externals: 'design-tokens/src/**'

  release:
    needs: [main, storybook-tests, chromatic]
    if: |
      always() && !failure() && !cancelled() &&
      (github.event_name == 'push' || github.event_name == 'pull_request') &&
      startsWith( (github.base_ref || github.ref_name), 'release/')
    uses: ./.github/workflows/release.yml
    with:
      dry-run: false
    secrets: inherit
    permissions:
      actions: read
      contents: write
      pull-requests: write
      id-token: write
